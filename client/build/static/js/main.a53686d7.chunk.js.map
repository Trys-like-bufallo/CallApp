{"version":3,"sources":["Components/DialPad/DiaPad.js","Redux/Store.js","App.js","index.js"],"names":["DialPad","useState","number","changeNumber","undefined","session","setSession","incall","setIncall","callStatus","useSelector","state","dispatch","useDispatch","configuration","sockets","JsSIP","WebSocketInterface","uri","password","no_answer_timeout","register_expires","session_timers","ua","UA","start","options","e","type","setTimeout","payload","on","handleChange","terminate","phoneNumber","call","length","newNumber","substring","className","placeholder","value","onKeyDown","key","onClick","initialState","store","createStore","action","Object","assign","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA+KeA,EAzKC,WAEZ,MAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,wBAASG,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BL,oBAAS,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KAEMC,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,cACxCG,EAAWC,cAEbC,EAAgB,CAChBC,QAAW,CAFF,IAAIC,IAAMC,mBAAmB,gCAGtCC,IAAW,kCACXC,SAAW,WACXC,kBAAmB,IACnBC,iBAAkB,IAClBC,gBAAgB,GAGhBC,EAAK,IAAIP,IAAMQ,GAAGV,GAEtBS,EAAGE,QAGH,IAyBIC,EAAU,CACV,cA1BgB,CAChB,SAAY,SAASC,GAEjBf,EAAS,CAACgB,KAAM,aAEpB,OAAU,SAASD,GAEjBf,EAAS,CAACgB,KAAM,WAChBC,YAAW,WACPjB,EAAS,CAACgB,KAAM,cACjB,MAEL,MAAS,SAASD,GAEhBf,EAAS,CAACgB,KAAM,UAChBC,YAAW,WACPjB,EAAS,CAACgB,KAAM,cACjB,MAEL,UAAa,SAASD,GAElBf,EAAS,CAACgB,KAAM,YAAaE,QAAS5B,MAM1C,iBAAqB,CAAE,OAAS,EAAM,OAAS,GAC/C,SAAY,CACV,WAAc,CACZ,CAAC,KAAQ,mCAKjBqB,EAAGQ,GAAG,iBAAiB,SAACJ,GAEpBf,EAAS,CAACgB,KAAM,YAChBtB,EAAWqB,EAAEtB,YAEjB,IAGM2B,EAAe,SAACL,GAClB,GAAQ,UAALA,EAIC,OAFAtB,EAAQ4B,iBACRzB,GAAU,GAGd,GAAQ,aAALmB,EAAH,CAQA,GAAQ,SAALA,EAEC,MAAa,IAAVzB,GAEC2B,YAAW,WACPjB,EAAS,CAACgB,KAAM,cACjB,UACHhB,EAAS,CAACgB,KAAM,YAzBdM,EA4BDhC,EA3BTqB,EAAGY,KAAKD,EAAaR,QA4BjBlB,GAAU,IA7BL,IAAC0B,GAgCNP,EAAI,KAAOA,EAAI,MAAa,KAALA,GAAiB,KAALA,GAEvCxB,EAAaD,EAASyB,QAtBlB,GAAGzB,EAAOkC,OAAS,EAAE,CACjB,IAAMC,EAAYnC,EAAOoC,UAAU,EAAGpC,EAAOkC,OAAO,GACpDjC,EAAakC,KAuBzB,OACI,sBAAKE,UAAY,WAAjB,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAOX,KAAK,OAAOY,YAAY,oBAAoBD,UAAY,oBAAoBE,MAASvC,EAC5FwC,UAAc,SAACf,GAAD,OAAOK,EAAaL,EAAEgB,QACpC,cAAC,IAAD,CAAaJ,UAAU,YAAYK,QAAW,kBAAMZ,EAAa,mBAErE,qBAAKO,UAAY,SACjB,qBAAKA,UAAU,cAAf,SACK9B,IAEL,sBAAK8B,UAAY,cAAjB,UACI,qBAAKA,UAAU,SAASK,QAAW,kBAAMZ,EAAa,MAAtD,eAGA,sBAAKO,UAAU,SAASK,QAAW,kBAAMZ,EAAa,MAAtD,cAEI,qBAAKO,UAAU,OAAf,oBAEJ,sBAAKA,UAAU,SAASK,QAAW,kBAAMZ,EAAa,MAAtD,cAEI,qBAAKO,UAAU,OAAf,oBAEJ,sBAAKA,UAAU,SAASK,QAAW,kBAAMZ,EAAa,MAAtD,cAEI,qBAAKO,UAAU,OAAf,oBAEJ,sBAAKA,UAAU,SAASK,QAAW,kBAAMZ,EAAa,MAAtD,cAEI,qBAAKO,UAAU,OAAf,oBAEJ,sBAAKA,UAAU,SAASK,QAAW,kBAAMZ,EAAa,MAAtD,cAEI,qBAAKO,UAAU,OAAf,oBAEJ,sBAAKA,UAAU,SAAUK,QAAW,kBAAMZ,EAAa,MAAvD,cAEI,qBAAKO,UAAU,OAAf,qBAEJ,sBAAKA,UAAU,SAASK,QAAW,kBAAMZ,EAAa,MAAtD,cAEI,qBAAKO,UAAU,OAAf,oBAEJ,sBAAKA,UAAU,SAASK,QAAW,kBAAMZ,EAAa,MAAtD,cAEI,qBAAKO,UAAU,OAAf,qBAEJ,qBAAKA,UAAU,SAASK,QAAW,kBAAMZ,EAAa,MAAtD,eAGA,qBAAKO,UAAU,SAASK,QAAW,kBAAMZ,EAAa,MAAtD,eAGA,qBAAKO,UAAU,SAASK,QAAW,kBAAMZ,EAAa,MAAtD,kBAIO,GAAVzB,EACG,qBAAKgC,UAAU,WAAWK,QAAW,kBAAMZ,EAAa,UAAxD,SACI,cAAC,IAAD,MAEJ,qBAAKO,UAAU,UAAUK,QAAW,kBAAMZ,EAAa,WAAvD,SACI,cAAC,IAAD,U,QCvKhBa,EAAe,CACfpC,WAAY,GACZF,QAAQ,GA0BNuC,EAAQC,aAvBE,WAAmC,IAAlCpC,EAAiC,uDAAzBkC,EAAcG,EAAW,uCAC9C,OAAQA,EAAOpB,MACX,IAAK,UACD,OAAOqB,OAAOC,OAAO,GAAIvC,EAAQ,CAACF,WAAY,KAClD,IAAK,UACD,OAAOwC,OAAOC,OAAO,GAAIvC,EAAO,CAACF,WAAY,eACjD,IAAK,QACD,OAAOwC,OAAOC,OAAO,GAAIvC,EAAO,CAACF,WAAY,2BACjD,IAAK,QACD,OAAOwC,OAAOC,OAAO,GAAIvC,EAAO,CAACF,WAAY,eACjD,IAAK,YACD,OAAOwC,OAAOC,OAAO,GAAIvC,EAAO,CAACF,WAAW,aAAD,OAAeuC,EAAOlB,WACrE,IAAK,UACD,OAAOmB,OAAOC,OAAO,GAAIvC,EAAO,CAACF,WAAY,eACjD,IAAK,SACD,OAAOwC,OAAOC,OAAO,GAAIvC,EAAO,CAACF,WAAY,WACjD,QACI,OAAOE,MAOJmC,ICVAK,MAff,WAGE,OACE,cAAC,IAAD,CAAUL,MAASA,EAAnB,SACE,sBAAKP,UAAU,MAAf,UACE,qBAAKA,UAAU,SAGf,cAAC,EAAD,UCVRa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a53686d7.chunk.js","sourcesContent":["import './DiaPad.scss';\r\nimport {FaBackspace, FaPhoneAlt} from 'react-icons/fa';\r\nimport {useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport JsSIP from 'jssip';\r\n\r\nconst DialPad = () => {\r\n\r\n    const [number, changeNumber] = useState('');\r\n    const [session, setSession] = useState(undefined);\r\n    const [incall, setIncall] = useState(false);\r\n\r\n    const callStatus = useSelector(state => state.callStatus);\r\n    const dispatch = useDispatch();\r\n    var socket = new JsSIP.WebSocketInterface('wss://sbc03.tel4vn.com:7444');\r\n    var configuration = {\r\n        sockets  : [ socket ],\r\n        uri      : 'sip:106@2-test1.gcalls.vn:50061',\r\n        password : 'test1106',\r\n        no_answer_timeout: 3000,\r\n        register_expires: 300,\r\n        session_timers: false,\r\n    };\r\n    \r\n    var ua = new JsSIP.UA(configuration);\r\n    \r\n    ua.start();\r\n    \r\n    // Register callbacks to desired call events\r\n    var eventHandlers = {\r\n        'progress': function(e) {\r\n        //   console.log('Dang Goi');\r\n            dispatch({type: 'calling'});\r\n        },\r\n        'failed': function(e) {\r\n          // console.log(e);\r\n          dispatch({type: 'failed'});\r\n          setTimeout(() => {\r\n              dispatch({type: 'disable'});\r\n          }, 20000)\r\n        },\r\n        'ended': function(e) {\r\n          // console.log(e);\r\n          dispatch({type: 'ended'});\r\n          setTimeout(() => {\r\n              dispatch({type: 'disable'});\r\n          }, 20000)\r\n        },\r\n        'confirmed': function(e) {\r\n        //   console.log('Dang Noi Chuyen');\r\n            dispatch({type: 'callstart', payload: number});\r\n        }\r\n    };\r\n    \r\n    var options = {\r\n        'eventHandlers'    : eventHandlers,\r\n        'mediaConstraints' : { 'audio': true, 'video': false },\r\n        'pcConfig': {\r\n          'iceServers': [\r\n            {'urls': 'stun:stun.l.google.com:19302'}\r\n          ],\r\n        }\r\n    };\r\n    \r\n    ua.on('newRTCSession', (e) => {\r\n    //   console.log('Dang Ket Noi!!!');\r\n        dispatch({type: 'connect'});\r\n        setSession(e.session);\r\n    });\r\n    const call = (phoneNumber) => {\r\n        ua.call(phoneNumber, options);\r\n    }\r\n    const handleChange = (e) => {\r\n        if(e == 'Escape')\r\n        {\r\n            session.terminate();\r\n            setIncall(false);\r\n            return;\r\n        }\r\n        if(e == \"Backspace\")\r\n        {\r\n            if(number.length > 0){\r\n                const newNumber = number.substring(0, number.length-1);\r\n                changeNumber(newNumber);\r\n            }\r\n            return;\r\n        }\r\n        if(e == \"Enter\")\r\n        {\r\n            if(number == '')\r\n            {\r\n                setTimeout(() => {\r\n                    dispatch({type: 'disable'});\r\n                }, 20000);\r\n                dispatch({type: 'error'});\r\n                return;\r\n            }\r\n            call(number);\r\n            setIncall(true);\r\n            return;\r\n        }\r\n        if((e < \"0\" || e > \"9\") && e != '*' && e != '#')\r\n            return;\r\n        changeNumber(number + e);\r\n    }\r\n\r\n    return (\r\n        <div className = \"dial-pad\" >\r\n            <div className=\"phonenumber\">\r\n                <input type=\"text\" placeholder=\"Type phone number\" className = \"phonenumber-input\" value = {number}\r\n                onKeyDown = { (e) => handleChange(e.key) }/>\r\n                <FaBackspace className=\"backspace\" onClick = {() => handleChange('Backspace') }/>\r\n            </div>\r\n            <div className = \"line\"></div>\r\n            <div className=\"call-status\">\r\n                {callStatus}\r\n            </div>\r\n            <div className = \"grid-number\">\r\n                <div className=\"number\" onClick = {() => handleChange('1')}>\r\n                    1 \r\n                </div>\r\n                <div className=\"number\" onClick = {() => handleChange('2')}>\r\n                    2\r\n                    <div className=\"text\">ABC</div>\r\n                </div>\r\n                <div className=\"number\" onClick = {() => handleChange('3')}>\r\n                    3 \r\n                    <div className=\"text\">DEF</div>\r\n                </div>\r\n                <div className=\"number\" onClick = {() => handleChange('4')}>\r\n                    4 \r\n                    <div className=\"text\">GHI</div>\r\n                </div>\r\n                <div className=\"number\" onClick = {() => handleChange('5')}>\r\n                    5 \r\n                    <div className=\"text\">JKL</div>\r\n                </div>\r\n                <div className=\"number\" onClick = {() => handleChange('6')}>\r\n                    6 \r\n                    <div className=\"text\">MNO</div>\r\n                </div>\r\n                <div className=\"number\"  onClick = {() => handleChange('7')}>\r\n                    7 \r\n                    <div className=\"text\">PQRS</div>\r\n                </div>\r\n                <div className=\"number\" onClick = {() => handleChange('8')}>\r\n                    8 \r\n                    <div className=\"text\">TUV</div>\r\n                </div>\r\n                <div className=\"number\" onClick = {() => handleChange('9')}>\r\n                    9 \r\n                    <div className=\"text\">WXYZ</div>\r\n                </div>\r\n                <div className=\"number\" onClick = {() => handleChange('*')}>\r\n                    * \r\n                </div>\r\n                <div className=\"number\" onClick = {() => handleChange('0')}>\r\n                    0 \r\n                </div>\r\n                <div className=\"number\" onClick = {() => handleChange('#')}>\r\n                    # \r\n                </div> \r\n            </div>\r\n            {incall == false ?\r\n                <div className=\"call-btn\" onClick = {() => handleChange('Enter')}>\r\n                    <FaPhoneAlt />\r\n                </div>:\r\n                <div className=\"off-btn\" onClick = {() => handleChange('Escape')}>\r\n                    <FaPhoneAlt />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default DialPad;","import {createStore} from 'redux';\r\nvar initialState = {\r\n    callStatus: '',\r\n    incall: false,\r\n}\r\n\r\nconst Reducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case 'disable':\r\n            return Object.assign({}, state , {callStatus: ''});\r\n        case 'calling':\r\n            return Object.assign({}, state, {callStatus: 'Calling...'});\r\n        case 'error':\r\n            return Object.assign({}, state, {callStatus: 'Phone number empty !!!'});\r\n        case 'ended':\r\n            return Object.assign({}, state, {callStatus: 'Call ended'});\r\n        case 'callstart':\r\n            return Object.assign({}, state, {callStatus: `Call with ${action.payload}`});\r\n        case 'connect':\r\n            return Object.assign({}, state, {callStatus: 'Connecting'});\r\n        case 'failed':\r\n            return Object.assign({}, state, {callStatus: 'Failed'});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst store = createStore(Reducer);\r\nexport default store;\r\n","import './App.scss';\nimport DialPad from './Components/DialPad/DiaPad.js';\nimport {Provider} from 'react-redux';\nimport store from './Redux/Store.js';\n\nfunction App() {\n  \n\n  return (\n    <Provider store = {store}>\n      <div className=\"App\">\n        <div className=\"Menu\">\n\n        </div>\n        <DialPad />      \n\n      </div>\n    </Provider>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}